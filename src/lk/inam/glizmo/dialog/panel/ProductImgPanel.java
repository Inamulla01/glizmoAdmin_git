/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package lk.inam.glizmo.dialog.panel;

import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author moham
 */
public class ProductImgPanel extends javax.swing.JPanel {

    /**
     * Creates new form ProductImgPanel
     */
    public ProductImgPanel() {
        initComponents();
        imageLoadingPanel.setLayout(new FlowLayout(FlowLayout.LEFT, 10, 10));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        prImagePathInput = new javax.swing.JTextField();
        controlBtn = new javax.swing.JButton();
        imageLoadingPanel = new javax.swing.JPanel();

        prImagePathInput.setFont(new java.awt.Font("JetBrains Mono", 1, 16)); // NOI18N

        controlBtn.setBackground(new java.awt.Color(0, 102, 255));
        controlBtn.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        controlBtn.setForeground(new java.awt.Color(255, 255, 255));
        controlBtn.setText("Brows");
        controlBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                controlBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout imageLoadingPanelLayout = new javax.swing.GroupLayout(imageLoadingPanel);
        imageLoadingPanel.setLayout(imageLoadingPanelLayout);
        imageLoadingPanelLayout.setHorizontalGroup(
            imageLoadingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        imageLoadingPanelLayout.setVerticalGroup(
            imageLoadingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 240, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(prImagePathInput, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(controlBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(imageLoadingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prImagePathInput, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(controlBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imageLoadingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void controlBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_controlBtnActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setMultiSelectionEnabled(true); // allow multiple images
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
                "Images (.png, .jpeg, .jpg)", "png", "jpeg", "jpg");
        chooser.setFileFilter(filter);

        int option = chooser.showOpenDialog(imageLoadingPanel);
        if (option == JFileChooser.APPROVE_OPTION) {
            File[] selectedFiles = chooser.getSelectedFiles();

            for (File selectedFile : selectedFiles) {
                try {
                    File imageFolder = new File("product_images");
                    if (!imageFolder.exists()) {
                        imageFolder.mkdir();
                    }

                    String fileName = System.currentTimeMillis() + "_" + selectedFile.getName();
                    File destinationFile = new File(imageFolder, fileName);
                    prImagePathInput.setText(destinationFile.getAbsolutePath());

                    Files.copy(selectedFile.toPath(),
                            destinationFile.toPath(),
                            StandardCopyOption.REPLACE_EXISTING);

                    showImage(destinationFile);

                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_controlBtnActionPerformed
    private void showImage(File imageFile) {
        ProductImg productImage = new ProductImg();
        productImage.setPreferredSize(new Dimension(140, 180));

        ImageIcon icon = new ImageIcon(imageFile.getAbsolutePath());
        Image image = icon.getImage().getScaledInstance(
                productImage.getPreferredSize().width,
                productImage.getPreferredSize().height,
                Image.SCALE_SMOOTH
        );

        boolean isSet = productImage.setProductImage(new ImageIcon(image));
        if (isSet) {
            imageLoadingPanel.add(productImage);
            imageLoadingPanel.revalidate();
            imageLoadingPanel.repaint();
            SwingUtilities.updateComponentTreeUI(imageLoadingPanel);
        }
    }

    public JTextField getPrImgPathInput() {
        return prImagePathInput;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton controlBtn;
    private javax.swing.JPanel imageLoadingPanel;
    private javax.swing.JTextField prImagePathInput;
    // End of variables declaration//GEN-END:variables
}
